[{"/home/ubaidk/Desktop/code/task_pro_challenge/src/index.js":"1","/home/ubaidk/Desktop/code/task_pro_challenge/src/reportWebVitals.js":"2","/home/ubaidk/Desktop/code/task_pro_challenge/src/App.js":"3","/home/ubaidk/Desktop/code/task_pro_challenge/src/components/Home/Layout.jsx":"4","/home/ubaidk/Desktop/code/task_pro_challenge/src/components/Feed/Feed.jsx":"5","/home/ubaidk/Desktop/code/task_pro_challenge/src/components/Helper/helper.js":"6","/home/ubaidk/Desktop/code/task_pro_challenge/src/components/Feed/Loader.jsx":"7","/home/ubaidk/Desktop/code/task_pro_challenge/src/components/Card/PostCard.jsx":"8"},{"size":435,"mtime":1609778897688,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609713213858,"results":"11","hashOfConfig":"10"},{"size":138,"mtime":1610043110193,"results":"12","hashOfConfig":"10"},{"size":610,"mtime":1612182372012,"results":"13","hashOfConfig":"10"},{"size":1286,"mtime":1611513063362,"results":"14","hashOfConfig":"10"},{"size":263,"mtime":1611512400071,"results":"15","hashOfConfig":"10"},{"size":260,"mtime":1610039858353,"results":"16","hashOfConfig":"10"},{"size":579,"mtime":1610043444707,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1a3c4x8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/home/ubaidk/Desktop/code/task_pro_challenge/src/index.js",[],["37","38"],"/home/ubaidk/Desktop/code/task_pro_challenge/src/reportWebVitals.js",[],"/home/ubaidk/Desktop/code/task_pro_challenge/src/App.js",[],"/home/ubaidk/Desktop/code/task_pro_challenge/src/components/Home/Layout.jsx",[],"/home/ubaidk/Desktop/code/task_pro_challenge/src/components/Feed/Feed.jsx",["39"],"import { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport PostCard from \"../Card/PostCard\";\nimport { getRandomPhotos } from \"../Helper/helper\";\nimport Loader from \"./Loader\";\n\nconst Feed = () => {\n  const [images, setImages] = useState([]);\n\n  const fetchRandomPhotos = () => {\n    getRandomPhotos()\n      .then((data) => {\n        if (data.errors) {\n          alert(\"Could not fetch photos. Please try again later.\");\n        } else {\n          console.log(data);\n          setImages([...images, ...data]);\n        }\n      })\n      .catch(() => {\n        setImages([]);\n        alert(\"Could not fetch photos from Unsplash. API limit exceeded\");\n      });\n  };\n\n  useEffect(() => {\n    fetchRandomPhotos();\n  }, []);\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={() => {\n        setTimeout(() => {\n          fetchRandomPhotos();\n        }, 2000);\n      }}\n      hasMore\n      loader={<Loader />}\n    >\n      <div id=\"columns\">\n        {images.map((image, index) => (\n          <PostCard\n            key={index}\n            description={image.alt_description}\n            url={image.urls.small}\n            likes={image.likes}\n          />\n        ))}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default Feed;\n","/home/ubaidk/Desktop/code/task_pro_challenge/src/components/Helper/helper.js",[],"/home/ubaidk/Desktop/code/task_pro_challenge/src/components/Feed/Loader.jsx",[],"/home/ubaidk/Desktop/code/task_pro_challenge/src/components/Card/PostCard.jsx",["40"],"const PostCard = (props) => {\n  return (\n    <figure>\n      <img src={props.url} />\n      <figcaption>{props.description}</figcaption>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-heart-fill mb-0 pb-0\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n        />\n      </svg>{\" \"}\n      <span>{props.likes}</span>\n    </figure>\n  );\n};\n\nexport default PostCard;\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":28,"column":6,"nodeType":"47","endLine":28,"endColumn":8,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":4,"column":7,"nodeType":"51","endLine":4,"endColumn":30},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchRandomPhotos'. Either include it or remove the dependency array.","ArrayExpression",["54"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [fetchRandomPhotos]",{"range":"57","text":"58"},[760,762],"[fetchRandomPhotos]"]